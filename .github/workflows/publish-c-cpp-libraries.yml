name: Publish C/C++ Libraries

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-c-cpp-libraries:
    name: Build C/C++ Libraries (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            use_cross: false
          - os: ubuntu-22.04
            platform: linux
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            use_cross: true
          - os: macos-latest
            platform: macos
            arch: aarch64
            target: aarch64-apple-darwin
            use_cross: false
          - os: windows-latest
            platform: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
            use_cross: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.use_cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.arch }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build C Node API library
        run: |
          if [ "${{ matrix.use_cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --package dora-node-api-c
          else
            cargo build --release --target ${{ matrix.target }} --package dora-node-api-c
          fi
        shell: bash

      - name: Build C Operator API library
        run: |
          if [ "${{ matrix.use_cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --package dora-operator-api-c
          else
            cargo build --release --target ${{ matrix.target }} --package dora-operator-api-c
          fi
        shell: bash

      - name: Build C++ Node API library
        run: |
          if [ "${{ matrix.use_cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --package dora-node-api-cxx
          else
            cargo build --release --target ${{ matrix.target }} --package dora-node-api-cxx
          fi
        shell: bash

      - name: Build C++ Operator API library
        run: |
          if [ "${{ matrix.use_cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --package dora-operator-api-cxx
          else
            cargo build --release --target ${{ matrix.target }} --package dora-operator-api-cxx
          fi
        shell: bash

      - name: Create artifacts directory
        run: |
          mkdir -p artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}
          mkdir -p artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}

      - name: Copy C libraries and headers (Unix)
        if: runner.os != 'Windows'
        run: |
          # C Node API
          cp target/${{ matrix.target }}/release/libdora_node_api_c.a artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          cp apis/c/node/node_api.h artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/

          # C Operator API
          cp target/${{ matrix.target }}/release/libdora_operator_api_c.a artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          cp apis/c/operator/operator_api.h artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          cp apis/c/operator/operator_types.h artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/

      - name: Copy C++ libraries and headers (Unix)
        if: runner.os != 'Windows'
        run: |
          # C++ Node API
          cp target/${{ matrix.target }}/release/libdora_node_api_cxx.a artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          if [ -d target/cxxbridge/dora-node-api-cxx ]; then
            find target/cxxbridge/dora-node-api-cxx -name "*.h" -exec cp {} artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/ \;
          fi

          # C++ Operator API
          cp target/${{ matrix.target }}/release/libdora_operator_api_cxx.a artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          if [ -d target/cxxbridge/dora-operator-api-cxx ]; then
            find target/cxxbridge/dora-operator-api-cxx -name "*.h" -exec cp {} artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/ \;
          fi

      - name: Copy C libraries and headers (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # C Node API
          Copy-Item target/${{ matrix.target }}/release/dora_node_api_c.lib artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          Copy-Item apis/c/node/node_api.h artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/

          # C Operator API
          Copy-Item target/${{ matrix.target }}/release/dora_operator_api_c.lib artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          Copy-Item apis/c/operator/operator_api.h artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          Copy-Item apis/c/operator/operator_types.h artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}/

      - name: Copy C++ libraries and headers (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # C++ Node API
          Copy-Item target/${{ matrix.target }}/release/dora_node_api_cxx.lib artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          if (Test-Path target/cxxbridge/dora-node-api-cxx) {
            Get-ChildItem -Path target/cxxbridge/dora-node-api-cxx -Filter *.h -Recurse | Copy-Item -Destination artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          }

          # C++ Operator API
          Copy-Item target/${{ matrix.target }}/release/dora_operator_api_cxx.lib artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          if (Test-Path target/cxxbridge/dora-operator-api-cxx) {
            Get-ChildItem -Path target/cxxbridge/dora-operator-api-cxx -Filter *.h -Recurse | Copy-Item -Destination artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}/
          }

      - name: Upload C libraries artifacts
        uses: actions/upload-artifact@v4
        with:
          name: c-libs-${{ matrix.platform }}-${{ matrix.arch }}
          path: artifacts/c-libs/${{ matrix.platform }}-${{ matrix.arch }}

      - name: Upload C++ libraries artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cpp-libs-${{ matrix.platform }}-${{ matrix.arch }}
          path: artifacts/cpp-libs/${{ matrix.platform }}-${{ matrix.arch }}

  publish-to-release:
    name: Publish to GitHub Release
    needs: build-c-cpp-libraries
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download C library artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: c-libs-*
          path: c-libs

      - name: Download C++ library artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: cpp-libs-*
          path: cpp-libs

      - name: List downloaded artifacts
        run: |
          echo "C libraries:"
          find c-libs -type f
          echo ""
          echo "C++ libraries:"
          find cpp-libs -type f

      - name: Create combined C libraries archive
        run: |
          cd c-libs
          tar czf ../dora-c-libraries.tar.gz */

      - name: Create combined C++ libraries archive
        run: |
          cd cpp-libs
          tar czf ../dora-cpp-libraries.tar.gz */

      - name: Upload to GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" dora-c-libraries.tar.gz dora-cpp-libraries.tar.gz --clobber
